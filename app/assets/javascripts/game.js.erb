$(document).on('turbolinks:load', function() {

var $boardContainer = document.querySelector('.board-container'); //grabs the div added to the index page -JB
var $table = document.createElement("table"); 
var $piecesContainer = document.querySelector('.pieces-container');


getID(); 

function getID() {
  let gameID = location.pathname.split('/')[2];
  getGamePieces(gameID);
}




function getGamePieces(id) {
     $.ajax({
        url: `/get_pieces/${id}`,
        method: 'get',

     }).then(function (data) {
       let pieces = data; 
       // console.log(pieces);
       pieces.forEach(function (piece) {
        var row = $boardContainer.querySelector(`[data-x="${piece.x_position}"][data-y="${piece.y_position}"]`);
         if (row){
          var span = document.createElement('span');
          span.className = 'piece';
          span.setAttribute('draggable', 'true')
          span.setAttribute('ondragstart', 'onDragStart(event);')
          span.setAttribute('id', piece.id);
          span.innerHTML = `<img src='/${piece.image}/'>`;
          // span.append(piece.id);

          row.appendChild(span);
         }

       })

     })
      
}        




function buildBoard() {



  for (let y = 0; y < 8; y++) {   
      var $tr = document.createElement('tr');
      for (let x = 0; x < 8; x++) {
          var $td = document.createElement('td');
          $td.setAttribute('data-x', x)
          $td.setAttribute('data-y', y)
          $td.setAttribute('ondragover', 'onDragOver(event);')
          $td.setAttribute('ondrop', 'onDrop(event);') //grabs the row iterator (i) and the cell iterator (n) and uses them for the coords! -JB
          if (x%2 == y%2) {           //every even square is white, odd is black -JB
              $td.className = "black square";
          } else {
              $td.className = "white square";
          }
          $tr.appendChild($td);
           
          $td.addEventListener('click', handleGetCoord);
            
      }
      $table.appendChild($tr);
    
  }
  $boardContainer.appendChild($table);


  }



buildBoard();


});

function onDragStart(event) {
  console.log(event.target.parentElement);
  event.dataTransfer.setData("text/plain", event.target.parentElement.id); //this grabs the id attribute that I set for the spans that currently equals piece.id
  
}

function onDragOver(event) { //here we can set styling to any of the boxes as the piece is dragged over them, such as highlighting
  event.preventDefault();
}

function onDrop(event) {
  
  console.log(event);
  const display = event
    .dataTransfer
    .getData("text/plain"); //this passes the id that we grabbed above to the new child element that we are 
                      //appending to the new box to make sure the correct piece is moved
  // console.log(display);
  const draggableElement = document.getElementById(display);
  const dropzone = event.target

  




  var x_position = dropzone.getAttribute('data-x');
  var y_position = dropzone.getAttribute('data-y');
  console.log(x_position, y_position, display)
 

  $.ajax({
    url: `/pieces/${display}`,
    method: 'PUT',
    data: {
      x_position: x_position, 
      y_position: y_position
    },
    dataType: 'json'     
  }).done( function() {
    dropzone.appendChild(draggableElement);
    event.dataTransfer.clearData();
  }).fail(function (err, a, b) {
    alert('invalid move');
  });
}




function handleGetCoord(event) {
     var $td = event.target; 
     var coordx =  $td.getAttribute('data-x');
     var coordy = $td.getAttribute('data-y');
     console.log(coordx, coordy);
}
